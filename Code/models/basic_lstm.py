"""
Basic LSTM model
"""

import torch.nn.functional as F
from torch import nn


class BasicLSTM(nn.Module):
    """
    Basic LSTM model with 1 LSTM layer and 1 fully connected layer.
    """

    def __init__(self, num_classes):
        super(BasicLSTM, self).__init__()

        # LSTM layer
        self.lstm = nn.LSTM(
            input_size=1, hidden_size=128, num_layers=1, batch_first=True
        )

        # Fully connected layer
        self.fc = nn.Linear(128, num_classes)

    def forward(self, x):
        # LSTM layer
        x, _ = self.lstm(x)

        # Get the last output of the LSTM layer
        x = x[:, -1, :]

        # Fully connected layer
        x = self.fc(x)

        # Softmax output layer
        return F.log_softmax(x, dim=1)
