import torch.nn as nn
from torchvision.models import models
from torchvision.models import VGG16_Weights


class FineTunedVGG16(nn.Module):
    """
    VGG16 model with the last fully connected layer replaced with a new one.
    """

    def __init__(self, num_classes):
        super(FineTunedVGG16, self).__init__()
        self.image_size = (224, 224)
        self.model = models.vgg16(weights=VGG16_Weights.DEFAULT)
        for param in self.model.features.parameters():
            param.requires_grad = False
        self.model.classifier[6] = nn.Linear(4096, num_classes)

    def forward(self, x):
        return self.model(x)
