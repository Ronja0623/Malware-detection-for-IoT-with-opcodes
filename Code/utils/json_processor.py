import json


class InputProcessor:
    def __init__(self, input_file_path):
        self.input_file_path = input_file_path

    def _read_json(self) -> dict:
        with open(self.input_file_path, "r") as f:
            return json.load(f)

    def _write_json(self, output_file_path, data) -> None:
        with open(output_file_path, "w") as f:
            json.dump(data, f, indent=4)

    def _spilt_data(self, data) -> tuple:
        config_data = {"config": data.get("config")}
        label_data = {"label": data.get("label")}
        return config_data, label_data

    def run(
        self, output_config_path="config.json", output_label_path="label.json"
    ) -> None:
        data = self._read_json()
        config_data, label_data = self._spilt_data(data)
        self._write_json(output_config_path, config_data)
        self._write_json(output_label_path, label_data)
