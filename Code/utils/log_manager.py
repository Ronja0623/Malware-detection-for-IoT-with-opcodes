import csv


class LogManager:
    """
    Record and save the metrics.
    """

    def __init__(self):
        self.metrics = []

    def record_metrics(self, epoch, loss, accuracy, precision, recall, f1_score, phase):
        self.metrics.append(
            {
                "epoch": epoch,
                "phase": phase,
                "loss": loss,
                "accuracy": accuracy,
                "precision": precision,
                "recall": recall,
                "f1_score": f1_score,
            }
        )

    def save_metrics(self, file_path):
        with open(file_path, "w", newline="") as file:
            fieldnames = [
                "epoch",
                "phase",
                "loss",
                "accuracy",
                "precision",
                "recall",
                "f1_score",
            ]
            writer = csv.DictWriter(file, fieldnames=fieldnames)
            writer.writeheader()
            for metric in self.metrics:
                writer.writerow(metric)

    def save_model_description(
        self, file_path, model, batch_size, learning_rate, epochs
    ):
        with open(file_path, "w") as file:
            file.write(f"Model: {type(model).__name__}\n")
            file.write(f"Batch Size: {batch_size}\n")
            file.write(f"Learning Rate: {learning_rate}\n")
            file.write(f"Epochs: {epochs}\n")
