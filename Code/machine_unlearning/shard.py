import os
import random
import numpy as np


class Shard:
    def __init__(self, shard_num):
        self.shard_num = shard_num

    def divide_by_shard(self, dataset_path):
        file_list = os.listdir(dataset_path)
        random.shuffle(file_list)
        shards = np.array_split(file_list, self.shard_num)
        return [list(shard) for shard in shards]

    def distribute_files(self, sharded_file_list, input_file_list):
        random.shuffle(input_file_list)
        updated_shard_indices = []
        # Distribute files to shards with Round Robin
        for i, file in enumerate(input_file_list):
            index = i % len(sharded_file_list)
            sharded_file_list[index].append(file)
            if index not in updated_shard_indices:
                updated_shard_indices.append(index)
        return sharded_file_list, updated_shard_indices

    def get_shard(self, shard_index, sharded_file_list):
        return sharded_file_list[shard_index]
