import random

import numpy as np


class Slice:
    def __init__(self, slice_num):
        self.slice_num = slice_num

    def divide_by_slice(self, sharded_list):
        random.shuffle(sharded_list)
        slices = np.array_split(sharded_list, self.slice_num)
        sorted_slices = sorted([list(slice) for slice in slices], key=len, reverse=True)
        return sorted_slices

    def append_files(self, sliced_list, input_list):
        random.shuffle(input_list)
        updated_slice_indices = []
        # Distribute files to slices with Round Robin
        for i, file in enumerate(input_list):
            index = i % len(sliced_list)
            # 確保 sliced_list[index] 是一個列表
            if isinstance(sliced_list[index], list):
                sliced_list[index].append(file)
            else:
                sliced_list[index] = [sliced_list[index], file]
            if index not in updated_slice_indices:
                updated_slice_indices.append(index)
        return sliced_list, min(updated_slice_indices)

    def get_slice_id(self, sliced_list, file_name):
        return next(
            (i for i, slice in enumerate(sliced_list) if file_name in slice),
            None,
        )
