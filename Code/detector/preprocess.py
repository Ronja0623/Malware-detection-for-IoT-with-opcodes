import os
import r2pipe
import pandas as pd
from malwareDetector.detector import detector
from multiprocessing import Pool, cpu_count


class Preprocess(detector):
    def __init__(self, config):
        self.config = config

    def disassembleABinary(self, file_name):
        disassemble = Disassemble(self.config, file_name)
        disassemble.disassemble()

    def preprocess(self, file_list):
        with Pool(cpu_count()) as pool:
            pool.map(self.disassembleABinary, file_list)


class Disassemble(detector):
    def __init__(self, config, file_name):
        self.config = config
        self.name = file_name
        self.input_file_path = os.path.join(
            self.config.folder.dataset, "data", file_name
        )
        self.output_csv_path = os.path.join(
            self.config.folder.disassemble, f"{file_name}.csv"
        )

    def openFile(self):
        r2 = r2pipe.open(self.input_file_path)
        return r2

    def disassembleFile(self, r2):
        r2.cmd("aaaa")
        df = pd.DataFrame(r2.cmdj("pDj $SS@$S"))
        df_split = df["opcode"].str.split(expand=True)
        df = pd.concat([df, df_split], axis=1)
        df.rename(columns={"opcode": "dropOp", 0: "opcode"}, inplace=True)
        df = df["opcode"]
        return df

    def saveFile(self, df):
        df.to_csv(self.output_csv_path)

    def disassemble(self):
        try:
            r2 = self.openFile()
            print(f"Disassembling {self.name}...")
            df = self.disassembleFile(r2)
            self.saveFile(df)
            print(f"Disassembling {self.name} is done.")
        except Exception as e:
            print("An exception occurred:", type(e))
