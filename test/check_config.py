from malwareDetector.detector import detector
from typing import Any
import numpy as np

class subDetector(detector):
    def __init__(self) -> None:
        super().__init__()
        self.config.folder.set_folder("disassemble", "Disassemble")
        # path: PathConfig = PathConfig()
        # print(f"input path = {self.config.path.input}")
        # folder: FolderConfig = FolderConfig()
        # print(f"folder list = {self.config.folder.folder_list}")
        # model: ModelConfig = ModelConfig()
        # set model parameter ex: self.config.model.set_param("gamma", 0)
        # classify: bool = DEFAULT_CLASSIFY
        # print(f"classify = {self.config.classify}")
        print(f"disassemble folder = {self.config.folder.disassemble}")

    def extractFeature(self) -> Any:
        return 'This is the implementation of the extractFeature function from the derived class.'

    def vectorize(self) -> np.array:
        return 'This is the implementation of the vectorize function from the derived class.'

    def model(self) -> Any:
        return 'This is the implementation of the model function from the derived class.'

    def predict(self) -> np.array:
        return 'This is the implementation of the predict function from the derived class.'

if __name__ == '__main__':
    myDetector = subDetector()
    myDetector.mkdir()
