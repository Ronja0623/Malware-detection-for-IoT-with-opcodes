from preprocess import Preprocess
from feature_selection import FeatureSelection
from vectorization import Vectorization
from preprocess import disam_helper, convert_to_csv_helper
from vectorization import vectorization_helper

###
# TODO: reorganize the code below
import os
from multiprocessing import Pool, cpu_count
dataset_dir_path = './dataset/data'
NUM_CPU = cpu_count()
file_list = os.listdir(dataset_dir_path)
disamed_list = os.listdir('./01_json_opcode')
###

if __name__ == "__main__":

    # preprocess: disassemble and save in json and csv files
    # TODO: test if there are malwares and benign wares, the function is still right
    # TODO: renew the progress bar
    # TODO: from the base class:malware_detector: make it could be reused in its child class preprocess and feature_selection
    POOL = Pool(NUM_CPU)
    input_pool = list(set(file_list) - set(disamed_list))
    if input_pool:
        POOL.map(disam_helper, input_pool)
    '''
    input_pool = file_list
    POOL.map(convert_to_csv_helper, input_pool)
    # feature selection
    ff = FeatureSelection()
    ff.func_helper()
    # vectorization
    input_pool = file_list
    POOL.map(vectorization_helper, input_pool)
    '''
